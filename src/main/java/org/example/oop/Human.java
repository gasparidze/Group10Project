package org.example.oop;

/**
 * Классы описывают структуру объекта
 *
 * Классы состоят из:
 * 1) поля/свойства
 * 2) конструкторы
 * 3) методы
 *
 * Основные понятия:
 * 1) инициализация чего-либо - это создание/заполнение чего-либо
 * 2) сигнатура метода - это название метода + его входные параметры + возвращаемое значение
 * 3) конкатенация строк - это соединение строк через оператор плюс (+)
 */
public class Human {
    /**
     * Модификаторы доступа контролируют видимость свойств/методов/классов/констукторов/блоков кода нашего объекта
     * существуют 4 модификатора доступа:
     * 1) default (package-private) - это модификатор доступа по умолчанию, т.е. если мы не указываем модификатор доступа,
     * то будет именно дефолтный, область видимости - в пределах пакета
     * 2) public - видно всегда и везде
     * 3) private - видно только в пределах класса, т.е. при обращении с самого класса
     * 4) protected - область видимости в пределах пакета + в классах-наследниках вне пакета
     */
    private String name;
    private double weight;
    private double height;
    private int age;

    /**
     * Конструктор - это некий блок кода, который отрабатывает при создании объекта, фактически с помощью конструктора
     * и происходит создание объекта
     *
     * Важно:
     * 1) конструктор вызывается только 1 раз
     * 2) конструкторов может быть сколько угодно много, это называется перегрузкой конструктора
     * 3) конструктор не возвращает никакое значение (отличие от методов)
     * 4) если не задавать конструктор явно, то у нас все равно будет конструктор по дефолту
     *
     * Заметка: когда мы указываем какой-то свой конструктор, то конструктор по умолчанию больше не виден и если мы хотим
     * им воспользоваться, то нужно его указывать явно
     */

    public Human(){
        System.out.println("hello from constructor");
    }

    public Human(String newName, double newHeight, double newWeight, int newAge){
        name = newName;
        height = newHeight;
        weight = newWeight;
        age = newAge;
    }

    public Human(String newName){
        name = newName;
    }

    /**
     * Метод - это некое действие, совершаемое объектом класса
     * Метод всегда что-то принимает и что-то возвращает (может ничего не возвращать)
     *
     * y = f(x)
     *
     *
     * Метод состоит из:
     * 1) модификтаор доступа
     * 2) тип возвращаемого значения, если метод ничего не возвращает, тогда тип будет void
     * 3) название метода
     * 4) входные параметры в формате: <тип данных1> + <название переменной1>, ..., <тип данныхN> + <название переменнойN>
     * 5) если тип возвращаемого значение не void, то тогда само значение возвращаем с помощью ключевого слова return
     */
    public void sayHello(String name){
        System.out.println("hello from " + name);
    }
}
